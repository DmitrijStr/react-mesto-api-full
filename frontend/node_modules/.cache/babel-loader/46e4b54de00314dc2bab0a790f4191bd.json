{"ast":null,"code":"export const BASE_URL = 'http://localhost:3008';\n\nconst checkResponse = res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n\nconst register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\n\nconst authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\n\nconst getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};\n\nexport { register, authorize, getContent };","map":{"version":3,"sources":["/home/dmitrij/dev/react-mesto-auth/src/auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAjB;;AAEP,MAAMC,aAAa,GAAIC,GAAD,IAASA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAArD;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrC,SAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AAClCY,IAAAA,MAAM,EAAE,MAD0B;AAElCC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAFyB;AAKlCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBP,MAAAA,KADoB;AACbC,MAAAA;AADa,KAAf;AAL4B,GAAvB,CAAL,CAQLO,IARK,CAQAhB,aARA,CAAP;AASA,CAVD;;AAYA,MAAMiB,SAAS,GAAG,CAACT,KAAD,EAAQC,QAAR,KAAqB;AACtC,SAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AAClCY,IAAAA,MAAM,EAAE,MAD0B;AAElCC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAFyB;AAKlCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,KAAf;AAL4B,GAAvB,CAAL,CAOLQ,IAPK,CAOAhB,aAPA,CAAP;AAQA,CATD;;AAWA,MAAMkB,UAAU,GAAIC,KAAD,IAAW;AAC7B,SAAOT,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;AACpCY,IAAAA,MAAM,EAAE,KAD4B;AAEpCC,IAAAA,OAAO,EAAE;AACR,sBAAgB,kBADR;AAER,uBAAkB,UAASO,KAAM;AAFzB;AAF2B,GAAzB,CAAL,CAOLH,IAPK,CAOAhB,aAPA,CAAP;AAQA,CATD;;AAoBA,SAAQO,QAAR,EAAkBU,SAAlB,EAA6BC,UAA7B","sourcesContent":["export const BASE_URL = 'http://localhost:3008';\n\nconst checkResponse = (res) => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n\nconst register = (email, password) => {\n\treturn fetch(`${BASE_URL}/signup`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify({ \n\t\t\temail, password})\n\t})\n\t\t.then(checkResponse)\n}\n\nconst authorize = (email, password) => {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify({ password, email })\n\t})\n\t\t.then(checkResponse)\n}\n\nconst getContent = (token) => {\n\treturn fetch(`${BASE_URL}/users/me`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(checkResponse)\n}\n\n\n\n\n\n\n\n\n\n\nexport {register, authorize, getContent};"]},"metadata":{},"sourceType":"module"}