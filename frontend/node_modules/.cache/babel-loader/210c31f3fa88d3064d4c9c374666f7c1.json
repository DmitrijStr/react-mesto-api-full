{"ast":null,"code":"import _classCallCheck from\"/home/dmitrij/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/dmitrij/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}return Promise.reject(new Error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status))).then(function(result){return result;});}// getInitialCards() {\n// \treturn fetch(`${this._baseUrl}/cards`, {\n// \t\theaders: this._headers\n// \t}).then(this._getResponseData)\n// }\n// getUserInfo() {\n// \treturn fetch(`${this._baseUrl}/users/me`, {\n// \t\theaders: this._headers\n// \t})\n// \t.then(this._getResponseData)\n// }\n// postCard(newCard) {\n// \treturn fetch(`${this._baseUrl}/cards`, {\n// \t\tmethod: 'POST',\n// \t\theaders: this._headers,\n// \t\tbody: JSON.stringify({\n// \t\t\tname: newCard.name,\n// \t\t\tlink: newCard.link\n// \t\t})\n// \t}).then(this._getResponseData)\n// }\n},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._getResponseData);}// patchUserInfo(newData) {\n// \treturn fetch(`${this._baseUrl}/users/me/`, {\n// \t\tmethod: 'PATCH',\n// \t\theaders: this._headers,\n// \t\tbody: JSON.stringify({\n// \t\t\tname: newData.name,\n// \t\t\tabout: newData.about\n// \t\t})\n// \t}).then(this._getResponseData)\n// }\n// patchAvatar(newData) {\n// \treturn fetch(`${this._baseUrl}/users/me/avatar`, {\n// \t\tmethod: 'PATCH',\n// \t\theaders: this._headers,\n// \t\tbody: JSON.stringify({\n// \t\t\tavatar: newData.avatar\n// \t\t})\n// \t}).then(this._getResponseData)\n// }\n// putLike(id) {\n// \treturn fetch(`${this._baseUrl}/cards/likes/${id}`, {\n// \t\tmethod: 'PUT',\n// \t\theaders: this._headers\n// \t})\n// \t\t.then(this._getResponseData)\n// }\n// removeLike(id) {\n// \treturn fetch(`${this._baseUrl}/cards/likes/${id}`, {\n// \t\tmethod: 'DELETE',\n// \t\theaders: this._headers\n// \t})\n// \t\t.then(this._getResponseData)\n// }\n// register(email, password) {\n// \treturn fetch(`${this._baseUrl}/signup`, {\n// \t\tmethod: 'POST',\n// \t\theaders: {\n// \t\t\t\"Content-Type\": \"application/json\"\n// \t\t},\n// \t\tbody: JSON.stringify({ \n// \t\t\temail, password})\n// \t})\n// \t\t.then(this._getResponseData)\n// }\n}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-15',headers:{authorization:'bfb56561-5ac4-4046-893e-dcc4ab3eace0','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/home/dmitrij/dev/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","options","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","Error","status","then","result","id","fetch","method","_getResponseData","api","authorization"],"mappings":"6UAAMA,CAAAA,G,yBACL,aAAYC,OAAZ,CAAqB,2BACpB,KAAKC,QAAL,CAAgBD,OAAO,CAACE,OAAxB,CACA,KAAKC,QAAL,CAAgBH,OAAO,CAACI,OAAxB,CACA,C,0EAEgBC,G,CAAK,CACrB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACX,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACA,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAe,GAAIC,CAAAA,KAAJ,iDAAqBL,GAAG,CAACM,MAAzB,EAAf,EACLC,IADK,CACA,SAACC,MAAD,CAAY,CACjB,MAAOA,CAAAA,MAAP,CACA,CAHK,CAAP,CAIA,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;8CAEWC,E,CAAI,CACd,MAAOC,CAAAA,KAAK,WAAI,KAAKd,QAAT,mBAA2Ba,EAA3B,EAAiC,CAC5CE,MAAM,CAAE,QADoC,CAE5CZ,OAAO,CAAE,KAAKD,QAF8B,CAAjC,CAAL,CAGJS,IAHI,CAGC,KAAKK,gBAHN,CAAP,CAIA,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;mBAGD,GAAMC,CAAAA,GAAG,CAAG,GAAInB,CAAAA,GAAJ,CAAQ,CACnBG,OAAO,CAAE,6CADU,CAEnBE,OAAO,CAAE,CACRe,aAAa,CAAE,sCADP,CAER,eAAgB,kBAFR,CAFU,CAAR,CAAZ,CAQA,cAAeD,CAAAA,GAAf","sourcesContent":["class Api {\n\tconstructor(options) {\n\t\tthis._baseUrl = options.baseUrl;\n\t\tthis._headers = options.headers;\n\t}\n\n\t_getResponseData(res) {\n\t\tif (res.ok) {\n\t\t\treturn res.json();\n\t\t}\n\t\treturn Promise.reject(new Error(`Ошибка: ${res.status}`))\n\t\t\t.then((result) => {\n\t\t\t\treturn result\n\t\t\t})\n\t}\n\n\t// getInitialCards() {\n\t// \treturn fetch(`${this._baseUrl}/cards`, {\n\t// \t\theaders: this._headers\n\t// \t}).then(this._getResponseData)\n\t// }\n\n\t// getUserInfo() {\n\t// \treturn fetch(`${this._baseUrl}/users/me`, {\n\t// \t\theaders: this._headers\n\t// \t})\n\t// \t.then(this._getResponseData)\n\t// }\n\n\t// postCard(newCard) {\n\t// \treturn fetch(`${this._baseUrl}/cards`, {\n\t// \t\tmethod: 'POST',\n\t// \t\theaders: this._headers,\n\t// \t\tbody: JSON.stringify({\n\t// \t\t\tname: newCard.name,\n\t// \t\t\tlink: newCard.link\n\t// \t\t})\n\t// \t}).then(this._getResponseData)\n\t// }\n\n\tdeleteCard(id) {\n\t\treturn fetch(`${this._baseUrl}/cards/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: this._headers\n\t\t}).then(this._getResponseData)\n\t}\n\n\t// patchUserInfo(newData) {\n\t// \treturn fetch(`${this._baseUrl}/users/me/`, {\n\t// \t\tmethod: 'PATCH',\n\t// \t\theaders: this._headers,\n\t// \t\tbody: JSON.stringify({\n\t// \t\t\tname: newData.name,\n\t// \t\t\tabout: newData.about\n\t// \t\t})\n\t// \t}).then(this._getResponseData)\n\t// }\n\n\t// patchAvatar(newData) {\n\t// \treturn fetch(`${this._baseUrl}/users/me/avatar`, {\n\t// \t\tmethod: 'PATCH',\n\t// \t\theaders: this._headers,\n\t// \t\tbody: JSON.stringify({\n\t// \t\t\tavatar: newData.avatar\n\t// \t\t})\n\t// \t}).then(this._getResponseData)\n\t// }\n\n\t// putLike(id) {\n\t// \treturn fetch(`${this._baseUrl}/cards/likes/${id}`, {\n\t// \t\tmethod: 'PUT',\n\t// \t\theaders: this._headers\n\t// \t})\n\t// \t\t.then(this._getResponseData)\n\t// }\n\n\t// removeLike(id) {\n\t// \treturn fetch(`${this._baseUrl}/cards/likes/${id}`, {\n\t// \t\tmethod: 'DELETE',\n\t// \t\theaders: this._headers\n\t// \t})\n\t// \t\t.then(this._getResponseData)\n\t// }\n\n\t// register(email, password) {\n\t// \treturn fetch(`${this._baseUrl}/signup`, {\n\t// \t\tmethod: 'POST',\n\t// \t\theaders: {\n\t// \t\t\t\"Content-Type\": \"application/json\"\n\t// \t\t},\n\t// \t\tbody: JSON.stringify({ \n\t// \t\t\temail, password})\n\t// \t})\n\t// \t\t.then(this._getResponseData)\n\t// }\n}\n\nconst api = new Api({\n\tbaseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n\theaders: {\n\t\tauthorization: 'bfb56561-5ac4-4046-893e-dcc4ab3eace0',\n\t\t'Content-Type': 'application/json'\n\t}\n});\n\nexport default api\n"]},"metadata":{},"sourceType":"module"}