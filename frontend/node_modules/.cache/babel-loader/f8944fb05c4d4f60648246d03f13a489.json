{"ast":null,"code":"var _jsxFileName = \"/home/dmitrij/dev/mesto-react/src/components/Main.js\";\nimport React from 'react';\nimport plusButtonPath from \"../images/plus.svg\";\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\nimport api from '../utils/Api';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('#');\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      console.log(data);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__infos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"profile__avatar-wrapper\",\n    onClick: props.onEditAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n    className: \"profile__avatar\",\n    src: \"#\",\n    alt: \"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 85\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"profile__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, userName), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"profile__button profile__button_action_edit hover-button\",\n    type: \"button\",\n    onClick: props.onEditProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile__profession\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"#\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"profile__button profile__button_action_add hover-button\",\n    type: \"button\",\n    onClick: props.onAddPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: plusButtonPath,\n    alt: \"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"photo-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"edit\",\n    isOpen: props.isEditProfilePopupOpen,\n    onClose: props.closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name-input\",\n    type: \"text\",\n    className: \"pop-up__input pop-up__text\",\n    name: \"name\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"40\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"name-input-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"profession-input\",\n    type: \"text\",\n    className: \"pop-up__input pop-up__text \",\n    name: \"about\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"200\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"profession-input-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"new-card\",\n    isOpen: props.isAddPlacePopupOpen,\n    onClose: props.closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"place\",\n    type: \"text\",\n    className: \"pop-up__text pop-up__text_type_place\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    name: \"name\",\n    required: true,\n    minLength: \"1\",\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"place-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"url\",\n    type: \"url\",\n    className: \"pop-up__text pop-up__text_type_link\",\n    placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n    name: \"link\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"url-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    name: \"delete-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    name: \"edit-avatar\",\n    isOpen: props.isEditAvatarPopupOpen,\n    onClose: props.closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"place\",\n    type: \"url\",\n    className: \"pop-up__text pop-up__text_type_place\",\n    placeholder: \"\\u0441\\u0441\\u044B\\u043B\\u043A\\u0430\",\n    name: \"avatar\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"place-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ImagePopup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/dmitrij/dev/mesto-react/src/components/Main.js"],"names":["React","ImagePopup","PopupWithForm","api","Main","props","userName","setUserName","useState","useEffect","getUserInfo","then","data","console","log","onEditAvatar","onEditProfile","onAddPlace","plusButtonPath","isEditProfilePopupOpen","closeAllPopups","isAddPlacePopupOpen","isEditAvatarPopupOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport plusButtonPath from '../images/plus.svg';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm'\nimport api from '../utils/Api'\n\n\nfunction Main(props) {\n\n  const [userName, setUserName] = React.useState('#')\n\n\n  React.useEffect(() => {\n    api.getUserInfo().then((data) => {\n      console.log(data)\n    })\n  })\n\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__infos\">\n          <figure className=\"profile__avatar-wrapper\" onClick={props.onEditAvatar}> <img className=\"profile__avatar\" src=\"#\" alt=\"изображение аватара\" />\n          </figure>\n          <div className=\"profile__description\">\n            <div className='profile__info'>\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button className=\"profile__button profile__button_action_edit hover-button\" type=\"button\" onClick={props.onEditProfile}></button>\n            </div>\n            <p className=\"profile__profession\">#</p>\n          </div>\n        </div>\n        <button className=\"profile__button profile__button_action_add hover-button\" type=\"button\" onClick={props.onAddPlace}>\n          <img src={plusButtonPath} alt='изображение кнопки добавить' />\n        </button>\n      </section>\n      <section className=\"photo-grid\">\n      </section>\n      <PopupWithForm title='Редактировать профиль' name='edit' isOpen={props.isEditProfilePopupOpen} onClose={props.closeAllPopups}>\n        <input id='name-input' type=\"text\" className=\"pop-up__input pop-up__text\" name=\"name\" required\n          minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" />\n        <span id=\"name-input-error\" className=\"\"></span>\n        <input id='profession-input' type=\"text\" className=\"pop-up__input pop-up__text \" name=\"about\"\n          required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" />\n        <span id=\"profession-input-error\" className=\"\"></span>\n      </PopupWithForm>\n      <PopupWithForm title='Новое место' name='new-card' isOpen={props.isAddPlacePopupOpen} onClose={props.closeAllPopups}>\n        <input id='place' type=\"text\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"Название\"\n          name=\"name\" required minLength=\"1\" maxLength=\"30\" />\n        <span id=\"place-error\" className=\"\"></span>\n        <input id='url' type=\"url\" className=\"pop-up__text pop-up__text_type_link\" placeholder=\"Ссылка на картинку\"\n          name='link' required />\n        <span id=\"url-error\" className=\"\"></span>\n      </PopupWithForm>\n      <PopupWithForm title='Вы уверены?' name='delete-card'>\n      </PopupWithForm>\n\n      <PopupWithForm title='Обновить аватар' name='edit-avatar' isOpen={props.isEditAvatarPopupOpen} onClose={props.closeAllPopups}>\n        <input id='place' type=\"url\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"ссылка\"\n          name=\"avatar\" required />\n        <span id=\"place-error\" className=\"\"></span>\n      </PopupWithForm>\n      <ImagePopup />\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      {/* <section className=\"pop-up popup_type_edit\">\n          <div className=\"pop-up__container\">\n            <button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\">\n            </button>\n            <p className=\"pop-up__title\">Редактировать профиль</p>\n            <form className=\"pop-up__input pop-up__form\" method=\"GET\" noValidate>\n              <input id='name-input' type=\"text\" className=\"pop-up__input pop-up__text\" name=\"name\" value='' required\n                minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" />\n              <span id=\"name-input-error\" className=\"\"></span>\n              <input id='profession-input' type=\"text\" className=\"pop-up__input pop-up__text \" name=\"about\"\n                value=\"\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" />\n              <span id=\"profession-input-error\" className=\"\"></span>\n              <button className=\"pop-up__btn pop-up__btn_action_save pop-up__btn_type_inactive\" type=\"submit\" disabled>\n                Сохранить\n          </button>\n            </form>\n          </div>\n        </section>\n        <section className=\"pop-up popup_type_new-card\">\n          <div className=\"pop-up__container\">\n            <button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\">\n            </button>\n            <p className=\"pop-up__title\">Новое место</p>\n            <form className=\"pop-up__input pop-up__form\" method=\"GET\" noValidate>\n              <input id='place' type=\"text\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"Название\" value=\"\"\n                name=\"name\" required minLength=\"1\" maxLength=\"30\" />\n              <span id=\"place-error\" className=\"\"></span>\n              <input id='url' type=\"url\" className=\"pop-up__text pop-up__text_type_link\" placeholder=\"Ссылка на картинку\"\n                name='link' required />\n              <span id=\"url-error\" className=\"\"></span>\n              <button className=\"pop-up__btn pop-up__btn_action_save pop-up__btn_type_inactive\" type=\"submit\" disabled>\n                Создать\n          </button>\n            </form>\n          </div>\n        </section>\n        <section className=\"pop-up popup_type_image\">\n          <div className=\"pop-up__content\">\n            <div className=\"pop-up__image-contnaiter\">\n              <button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\">\n              </button>\n              <img className=\"pop-up__image\" src=\"#\" alt='изображение' />\n              <p className='pop-up__image-name'></p>\n            </div>\n          </div>\n        </section>\n        <section className=\"pop-up popup_type_delete-card\">\n          <div className=\"pop-up__container\">\n            <button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\">\n            </button>\n            <p className=\"pop-up__title\">Вы уверены?</p>\n            <button className=\"pop-up__btn pop-up__btn_action_save\" type=\"submit\">\n              Да\n            </button>\n          </div>\n        </section>\n        <section className=\"pop-up popup_type_edit-avatar\">\n          <div className=\"pop-up__container\">\n            <button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\">\n            </button>\n            <p className=\"pop-up__title\">Обновить аватар</p>\n            <form className=\"pop-up__input pop-up__form\" method=\"GET\" noValidate>\n              <input id='place' type=\"url\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"ссылка\" value=\"\"\n                name=\"avatar\" required />\n              <span id=\"place-error\" className=\"\"></span>\n              <button className=\"pop-up__btn pop-up__btn_action_save pop-up__btn_type_inactive\" type=\"submit\" disabled>\n                Сохранить\n            </button>\n            </form>\n          </div>\n        </section> */}\n    </main>\n  );\n\n\n\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}