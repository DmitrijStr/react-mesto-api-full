{"ast":null,"code":"var _jsxFileName = \"/home/dmitrij/dev/mesto-react/src/components/EditProfilePopup.js\";\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n  const {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = props;\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDiscriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    name: \"edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name-input\",\n    type: \"text\",\n    className: \"pop-up__input pop-up__text\",\n    name: \"name\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"40\",\n    autoComplete: \"off\",\n    value: name,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"name-input-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"profession-input\",\n    type: \"text\",\n    className: \"pop-up__input pop-up__text \",\n    name: \"about\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"200\",\n    autoComplete: \"off\",\n    value: description,\n    onChange: handleDiscriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"profession-input-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }));\n  {\n    /* <EditProfilePopup title='Редактировать профиль' name='edit' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n    </EditProfilePopup> */\n  }\n}\n\nexport default EditProfilePopup;\n{\n  /* <section className={`pop-up popup_type_${name} ${isOpen && 'pop-up_type_opened'}`} >\n  <div className=\"pop-up__container\">\n  \t<button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\" onClick={onClose}>\n  \t</button>\n  \t<p className=\"pop-up__title\">{title}</p>\n  \t<form className=\"pop-up__input pop-up__form\" method=\"GET\" noValidate>\n  \t\t{children}\n  \t\t<button className=\"pop-up__btn pop-up__btn_action_save pop-up__btn_type_inactive\" type=\"submit\" disabled>\n  \t\t\tСохранить\n  </button>\n  \t</form>\n  </div>\n  </section> */\n}","map":{"version":3,"sources":["/home/dmitrij/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","name","setName","useState","description","setDescription","currentUser","useContext","isOpen","onClose","onUpdateUser","useEffect","about","handleNameChange","e","target","value","handleDiscriptionChange","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n\n\tconst [name, setName] = React.useState('')\n  const [description, setDescription] = React.useState('')\n\tconst currentUser = React.useContext(CurrentUserContext);\n\n\n\tconst { isOpen, onClose, onUpdateUser } = props;\n\n\tReact.useEffect(() => {\n\t\tsetName(currentUser.name);\n\t\tsetDescription(currentUser.about);\n\t}, [currentUser]);\n\n\tfunction handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n\tfunction handleDiscriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\t\tprops.onUpdateUser({\n\t\t\tname,\n\t\t\tabout: description,\n\t\t});\n\t} \n\t\n\treturn (\n\t\t<PopupWithForm isOpen={isOpen} onClose={onClose} name='edit' title='Редактировать профиль' onSubmit={handleSubmit}>\n\t\t\t<input id='name-input' type=\"text\" className=\"pop-up__input pop-up__text\" name=\"name\" required minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" value={name} onChange={handleNameChange}/>\n\t\t\t<span id=\"name-input-error\" className=\"\"></span>\n\t\t\t<input id='profession-input' type=\"text\" className=\"pop-up__input pop-up__text \" name=\"about\"\n\t\t\t\trequired minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" value={description} onChange={handleDiscriptionChange}/>\n\t\t\t<span id=\"profession-input-error\" className=\"\"></span>\n\t\t</PopupWithForm>\n\t)\n\n\n\n\n\n\n\n\n\n\n\n\t{/* <EditProfilePopup title='Редактировать профиль' name='edit' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n\t\n</EditProfilePopup> */}\n\n}\nexport default EditProfilePopup;\n\n\n{/* <section className={`pop-up popup_type_${name} ${isOpen && 'pop-up_type_opened'}`} >\n\t<div className=\"pop-up__container\">\n\t\t<button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\" onClick={onClose}>\n\t\t</button>\n\t\t<p className=\"pop-up__title\">{title}</p>\n\t\t<form className=\"pop-up__input pop-up__form\" method=\"GET\" noValidate>\n\t\t\t{children}\n\t\t\t<button className=\"pop-up__btn pop-up__btn_action_save pop-up__btn_type_inactive\" type=\"submit\" disabled>\n\t\t\t\tСохранить\n\t</button>\n\t\t</form>\n\t</div>\n</section> */}"]},"metadata":{},"sourceType":"module"}