{"ast":null,"code":"var _jsxFileName = \"/home/dmitrij/dev/mesto-react/src/components/Main.js\";\nimport React from 'react';\nimport plusButtonPath from \"../images/plus.svg\";\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\nimport api from '../utils/Api';\nimport Card from './Card';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('#');\n  const [userDescription, setUserDescription] = React.useState('#');\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, getCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setUserName(data.name);\n      setUserDescription(data.about);\n      setUserAvatar(data.avatar);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      console.log(data);\n      const items = data.map(el => ({\n        id: el._id,\n        title: el.name,\n        src: el.link,\n        likes: el.likes.length\n      }));\n      console.log(items);\n      getCards(items);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__infos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"profile__avatar-wrapper\",\n    onClick: props.onEditAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${userAvatar})`\n    },\n    className: \"profile__avatar\",\n    src: \"#\",\n    alt: \"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"profile__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, userName), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"profile__button profile__button_action_edit hover-button\",\n    type: \"button\",\n    onClick: props.onEditProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile__profession\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, userDescription))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"profile__button profile__button_action_add hover-button\",\n    type: \"button\",\n    onClick: props.onAddPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: plusButtonPath,\n    alt: \"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"photo-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, cards.map(({\n    id,\n    ...card\n  }) => /*#__PURE__*/React.createElement(Card, Object.assign({\n    key: id\n  }, card, {\n    onCardClick: props.onCardClick,\n    card: card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"edit\",\n    isOpen: props.isEditProfilePopupOpen,\n    onClose: props.closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name-input\",\n    type: \"text\",\n    className: \"pop-up__input pop-up__text\",\n    name: \"name\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"40\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"name-input-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"profession-input\",\n    type: \"text\",\n    className: \"pop-up__input pop-up__text \",\n    name: \"about\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"200\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"profession-input-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"new-card\",\n    isOpen: props.isAddPlacePopupOpen,\n    onClose: props.closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"place\",\n    type: \"text\",\n    className: \"pop-up__text pop-up__text_type_place\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    name: \"name\",\n    required: true,\n    minLength: \"1\",\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"place-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"url\",\n    type: \"url\",\n    className: \"pop-up__text pop-up__text_type_link\",\n    placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n    name: \"link\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"url-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    name: \"delete-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    name: \"edit-avatar\",\n    isOpen: props.isEditAvatarPopupOpen,\n    onClose: props.closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"place\",\n    type: \"url\",\n    className: \"pop-up__text pop-up__text_type_place\",\n    placeholder: \"\\u0441\\u0441\\u044B\\u043B\\u043A\\u0430\",\n    name: \"avatar\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"place-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ImagePopup, {\n    onClose: props.closeAllPopups,\n    isOpen: props.isCardPopupOpen,\n    onClick: props.card,\n    card: props.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/dmitrij/dev/mesto-react/src/components/Main.js"],"names":["React","ImagePopup","PopupWithForm","api","Card","Main","props","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","getCards","useEffect","getUserInfo","then","data","name","about","avatar","getInitialCards","console","log","items","map","el","id","_id","title","src","link","likes","length","onEditAvatar","backgroundImage","onEditProfile","onAddPlace","plusButtonPath","card","onCardClick","isEditProfilePopupOpen","closeAllPopups","isAddPlacePopupOpen","isEditAvatarPopupOpen","isCardPopupOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport plusButtonPath from '../images/plus.svg';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm'\nimport api from '../utils/Api'\nimport Card from './Card'\n\nfunction Main(props) {\n\n  const [userName, setUserName] = React.useState('#')\n  const [userDescription, setUserDescription] = React.useState('#')\n  const [userAvatar, setUserAvatar] = React.useState()\n  const [cards, getCards] = React.useState([])\n\n  React.useEffect(() => {\n    api.getUserInfo().then((data) => {\n      setUserName(data.name)\n      setUserDescription(data.about)\n      setUserAvatar(data.avatar)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    api.getInitialCards().then((data) => {\n      console.log(data)\n      const items = data.map((el) => ({\n        id: el._id,\n        title: el.name,\n        src: el.link,\n        likes: el.likes.length\n      }))\n      console.log(items)\n\n      getCards(items);\n    });\n  }, [])\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__infos\">\n          <figure className=\"profile__avatar-wrapper\" onClick={props.onEditAvatar}>\n            <div style={{ backgroundImage: `url(${userAvatar})` }} className=\"profile__avatar\" src=\"#\" alt=\"изображение аватара\">\n            </div>\n          </figure>\n          <div className=\"profile__description\">\n            <div className='profile__info'>\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button className=\"profile__button profile__button_action_edit hover-button\" type=\"button\" onClick={props.onEditProfile}></button>\n            </div>\n            <p className=\"profile__profession\">{userDescription}</p>\n          </div>\n        </div>\n        <button className=\"profile__button profile__button_action_add hover-button\" type=\"button\" onClick={props.onAddPlace}>\n          <img src={plusButtonPath} alt='изображение кнопки добавить' />\n        </button>\n      </section>\n      <section className=\"photo-grid\">\n        {cards.map(({ id, ...card }) => (\n          <Card key={id} {...card} onCardClick={props.onCardClick} card={card}/>\n        ))}\n      </section>\n      <PopupWithForm title='Редактировать профиль' name='edit' isOpen={props.isEditProfilePopupOpen} onClose={props.closeAllPopups}>\n        <input id='name-input' type=\"text\" className=\"pop-up__input pop-up__text\" name=\"name\" required\n          minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" />\n        <span id=\"name-input-error\" className=\"\"></span>\n        <input id='profession-input' type=\"text\" className=\"pop-up__input pop-up__text \" name=\"about\"\n          required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" />\n        <span id=\"profession-input-error\" className=\"\"></span>\n      </PopupWithForm>\n      <PopupWithForm title='Новое место' name='new-card' isOpen={props.isAddPlacePopupOpen} onClose={props.closeAllPopups}>\n        <input id='place' type=\"text\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"Название\"\n          name=\"name\" required minLength=\"1\" maxLength=\"30\" />\n        <span id=\"place-error\" className=\"\"></span>\n        <input id='url' type=\"url\" className=\"pop-up__text pop-up__text_type_link\" placeholder=\"Ссылка на картинку\"\n          name='link' required />\n        <span id=\"url-error\" className=\"\"></span>\n      </PopupWithForm>\n      <PopupWithForm title='Вы уверены?' name='delete-card'>\n      </PopupWithForm>\n\n      <PopupWithForm title='Обновить аватар' name='edit-avatar' isOpen={props.isEditAvatarPopupOpen} onClose={props.closeAllPopups}>\n        <input id='place' type=\"url\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"ссылка\"\n          name=\"avatar\" required />\n        <span id=\"place-error\" className=\"\"></span>\n      </PopupWithForm>\n      <ImagePopup  onClose={props.closeAllPopups} isOpen={props.isCardPopupOpen} onClick={props.card} card={props.card}/>\n    </main>\n  );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}