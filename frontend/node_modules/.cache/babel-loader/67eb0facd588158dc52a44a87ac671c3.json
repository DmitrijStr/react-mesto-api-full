{"ast":null,"code":"var _jsxFileName = \"/home/dmitrij/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Api from '../utils/Api';\nimport Register from './Register';\nimport Login from './Login';\nimport { register, authorize, getContent } from '../auth';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState({\n    email: ''\n  });\n  const history = useHistory();\n  useEffect(_ => {\n    tokenCheck();\n  }, []);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isCardPopupOpen, setCardPopupOpen] = useState(false);\n  const [currentUser, setcurrentUser] = useState({});\n  const [cards, getCards] = useState([]);\n  const [infoTooltipState, setInfoTooltipState] = useState({\n    message: '',\n    success: Boolean,\n    open: false\n  }); // useEffect(() => {\n  //   api.getInitialCards()\n  //     .then((data) => {\n  //       const items = data.map((el) => ({\n  //         _id: el._id,\n  //         name: el.name,\n  //         link: el.link,\n  //         likes: el.likes,\n  //         owner: el.owner\n  //       }))\n  //       getCards(items);\n  //     })\n  //     .catch(err => console.log(err))\n  // }, [])\n  // useEffect(() => {\n  //   api.getUserInfo()\n  //     .then((data) => {\n  //       setcurrentUser(data)\n  //     })\n  //     .catch(err => console.log(err))\n  // }, [])\n\n  function handleCardClick(card) {\n    setCardPopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setCardPopupOpen(false);\n    setInfoTooltipState({\n      open: false\n    });\n  }\n\n  function handleCardDelete(id) {\n    api.deleteCard(id).then(() => {\n      getCards(cards.filter(card => card._id !== id));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDislike(id) {\n    api.removeLike(id).then(newCard => {\n      const newCards = cards.map(c => c._id === id ? newCard : c);\n      getCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardLike(id) {\n    api.putLike(id).then(newCard => {\n      const newCards = cards.map(c => c._id === id ? newCard : c);\n      getCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser(newData) {\n    api.patchUserInfo(newData).then(data => {\n      setcurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    api.patchAvatar(newAvatar).then(data => {\n      setcurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.postCard(newCard).then(data => {\n      getCards([...cards, data]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  const handleLogin = (email, password) => {\n    authorize(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        tokenCheck();\n      }\n    }).catch(err => console.error(err));\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setUserData({\n      email: ''\n    });\n    setLoggedIn(false);\n  };\n\n  const handleRegister = (email, password) => {\n    api.register(email, password).then(data => {\n      console.log(data);\n\n      if (data.data._id) {\n        setInfoTooltipState({\n          message: 'Вы успешно зарегистрировались!',\n          success: true,\n          open: true\n        });\n        history.push('/sign-in');\n      }\n    }).catch(err => {\n      console.log(err);\n      setInfoTooltipState({\n        message: 'Что-то пошло не так! Попробуйте ещё раз.',\n        success: false,\n        open: true\n      });\n    });\n  };\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      getContent(jwt).then(res => {\n        console.log(res);\n\n        if (res.data.email) {\n          setUserData({\n            email: res.data.email\n          });\n          setLoggedIn(true);\n          history.push('/');\n        }\n      }).catch(err => {\n        localStorage.removeItem('jwt');\n        console.error(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    loggedIn: loggedIn,\n    userData: userData,\n    logout: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    handleRegister: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/\",\n    loggedIn: loggedIn,\n    component: Main,\n    onEditAvatar: handleEditAvatarClick,\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onCardClick: handleCardClick,\n    onCardDelete: handleCardDelete,\n    onCardLike: handleCardLike,\n    onCardDislike: handleCardDislike,\n    cards: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    isOpen: isCardPopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoTooltip, {\n    onClose: closeAllPopups,\n    renderState: infoTooltipState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(App, \"jk0YpxYzsDGut1UIpp8zjcl4U7w=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dmitrij/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","Api","Register","Login","register","authorize","getContent","ProtectedRoute","InfoTooltip","App","loggedIn","setLoggedIn","userData","setUserData","email","history","_","tokenCheck","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","isCardPopupOpen","setCardPopupOpen","currentUser","setcurrentUser","cards","getCards","infoTooltipState","setInfoTooltipState","message","success","Boolean","open","handleCardClick","card","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","closeAllPopups","handleCardDelete","id","api","deleteCard","then","filter","_id","catch","err","console","log","handleCardDislike","removeLike","newCard","newCards","map","c","handleCardLike","putLike","handleUpdateUser","newData","patchUserInfo","data","handleUpdateAvatar","newAvatar","patchAvatar","handleAddPlaceSubmit","postCard","handleLogin","password","token","localStorage","setItem","error","handleLogout","removeItem","handleRegister","push","jwt","getItem","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport Api from '../utils/Api'\nimport Register from './Register';\nimport Login from './Login';\nimport { register, authorize, getContent } from '../auth';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\n\nfunction App() {\n\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [userData, setUserData] = useState({\n    email: ''\n  })\n\n  const history = useHistory();\n\n  useEffect(_ => {\n    tokenCheck()\n  }, [])\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false)\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isCardPopupOpen, setCardPopupOpen] = useState(false)\n  const [currentUser, setcurrentUser] = useState({})\n  const [cards, getCards] = useState([])\n  const [infoTooltipState, setInfoTooltipState] = useState({\n    message: '',\n    success: Boolean,\n    open: false\n  });\n\n  // useEffect(() => {\n  //   api.getInitialCards()\n  //     .then((data) => {\n  //       const items = data.map((el) => ({\n  //         _id: el._id,\n  //         name: el.name,\n  //         link: el.link,\n  //         likes: el.likes,\n  //         owner: el.owner\n  //       }))\n  //       getCards(items);\n  //     })\n  //     .catch(err => console.log(err))\n  // }, [])\n\n  // useEffect(() => {\n  //   api.getUserInfo()\n  //     .then((data) => {\n  //       setcurrentUser(data)\n  //     })\n  //     .catch(err => console.log(err))\n  // }, [])\n\n  function handleCardClick(card) {\n    setCardPopupOpen(true)\n    setSelectedCard(card)\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setEditProfilePopupOpen(false)\n    setCardPopupOpen(false)\n    setInfoTooltipState({\n      open: false\n    })\n  }\n\n  function handleCardDelete(id) {\n    api.deleteCard(id)\n      .then(() => {\n        getCards(cards.filter(card => card._id !== id))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleCardDislike(id) {\n    api.removeLike(id)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === id ? newCard : c);\n        getCards(newCards);\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleCardLike(id) {\n    api.putLike(id)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === id ? newCard : c);\n        getCards(newCards);\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleUpdateUser(newData) {\n    api.patchUserInfo(newData)\n      .then((data) => {\n        setcurrentUser(data)\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    api.patchAvatar(newAvatar)\n      .then((data) => {\n        setcurrentUser(data)\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.postCard(newCard)\n      .then((data) => {\n        getCards([...cards, data]);\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleLogin = (email, password) => {\n    authorize(email, password)\n      .then(data => {\n        if (data.token) {\n          localStorage.setItem('jwt', data.token)\n          tokenCheck()\n        }\n      })\n      .catch(err => console.error(err))\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setUserData({\n      email: ''\n    })\n    setLoggedIn(false)\n  }\n\n  const handleRegister = (email, password) => {\n    api.register(email, password)\n      .then(data => {\n        console.log(data)\n        if (data.data._id) {\n          setInfoTooltipState({\n            message: 'Вы успешно зарегистрировались!',\n            success: true,\n            open: true\n          })\n          history.push('/sign-in')\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        setInfoTooltipState({\n          message: 'Что-то пошло не так! Попробуйте ещё раз.',\n          success: false,\n          open: true\n        })\n      })\n  }\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      getContent(jwt)\n        .then((res) => {\n          console.log(res)\n          if (res.data.email) {\n            setUserData({\n              email: res.data.email\n            })\n            setLoggedIn(true)\n            history.push('/')\n          }\n        }).catch(err => {\n          localStorage.removeItem('jwt')\n          console.error(err)\n        })\n    }\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <div className=\"page__content\">\n          <Header\n            loggedIn={loggedIn}\n            userData={userData}\n            logout={handleLogout}\n          />\n          <Switch>\n            <Route exact path=\"/sign-in\">\n              <Login handleLogin={handleLogin} />\n            </Route>\n            <Route exact path=\"/sign-up\">\n              <Register handleRegister={handleRegister} />\n            </Route>\n            <ProtectedRoute exact path=\"/\"\n              loggedIn={loggedIn}\n              component={Main}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardDelete={handleCardDelete}\n              onCardLike={handleCardLike}\n              onCardDislike={handleCardDislike}\n              cards={cards}\n            />\n          </Switch>\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n          <ImagePopup\n            card={selectedCard}\n            isOpen={isCardPopupOpen}\n            onClose={closeAllPopups}\n          />\n          <InfoTooltip\n            onClose={closeAllPopups}\n            renderState={infoTooltipState}\n          />\n          <Footer />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}