{"ast":null,"code":"export const BASE_URL = `${window.location.protocol}${process.env.REACT_APP_API_URL || '//localhost:3001'}`;\n\nconst checkResponse = res => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n\nconst register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\n\nconst authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\n\nconst getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};\n\nconst getInitialCards = token => {\n  return fetch(`${BASE_URL}/cards`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};\n\nconst postCard = (token, newCard) => {\n  return fetch(`${BASE_URL}/cards`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name: newCard.name,\n      link: newCard.link\n    })\n  }).then(checkResponse);\n};\n\nconst patchUserInfo = (token, newData) => {\n  return fetch(`${BASE_URL}/users/me/`, {\n    method: 'PATCH',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name: newData.name,\n      about: newData.about\n    })\n  }).then(checkResponse);\n};\n\nconst patchAvatar = (token, newData) => {\n  return fetch(`${BASE_URL}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      avatar: newData.avatar\n    })\n  }).then(checkResponse);\n};\n\nconst putLike = (token, id) => {\n  return fetch(`${BASE_URL}/cards/likes/${id}`, {\n    method: 'PUT',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};\n\nconst removeLike = (token, id) => {\n  return fetch(`${BASE_URL}/cards/likes/${id}`, {\n    method: 'DELETE',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};\n\nconst deleteCard = (token, id) => {\n  return fetch(`${BASE_URL}/cards/${id}`, {\n    method: 'DELETE',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};\n\nexport { register, authorize, getContent, getInitialCards, postCard, patchUserInfo, patchAvatar, putLike, removeLike, deleteCard };","map":{"version":3,"sources":["/home/dmitrij/dev/react-mesto-api-full/frontend/src/auth.js"],"names":["BASE_URL","window","location","protocol","process","env","REACT_APP_API_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token","getInitialCards","postCard","newCard","name","link","patchUserInfo","newData","about","patchAvatar","avatar","putLike","id","removeLike","deleteCard"],"mappings":"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","sourcesContent":["export const BASE_URL = `${window.location.protocol}${process.env.REACT_APP_API_URL || '//localhost:3001'}`;\n\nconst checkResponse = (res) => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n\nconst register = (email, password) => {\n\treturn fetch(`${BASE_URL}/signup`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\temail, password\n\t\t})\n\t})\n\t\t.then(checkResponse)\n}\n\nconst authorize = (email, password) => {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify({ password, email })\n\t})\n\t\t.then(checkResponse)\n}\n\nconst getContent = (token) => {\n\treturn fetch(`${BASE_URL}/users/me`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(checkResponse)\n}\n\nconst getInitialCards = (token) => {\n\treturn fetch(`${BASE_URL}/cards`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t}\n\t}).then(checkResponse)\n}\n\nconst postCard = (token, newCard) => {\n\treturn fetch(`${BASE_URL}/cards`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tname: newCard.name,\n\t\t\tlink: newCard.link\n\t\t})\n\t}).then(checkResponse)\n}\n\nconst patchUserInfo = (token, newData) => {\n\treturn fetch(`${BASE_URL}/users/me/`, {\n\t\tmethod: 'PATCH',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tname: newData.name,\n\t\t\tabout: newData.about\n\t\t})\n\t}).then(checkResponse)\n}\n\nconst patchAvatar = (token, newData) => {\n\treturn fetch(`${BASE_URL}/users/me/avatar`, {\n\t\tmethod: 'PATCH',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tavatar: newData.avatar\n\t\t})\n\t}).then(checkResponse)\n}\n\nconst putLike = (token, id) => {\n\treturn fetch(`${BASE_URL}/cards/likes/${id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t},\n\t})\n\t\t.then(checkResponse)\n}\n\nconst removeLike = (token, id) => {\n\treturn fetch(`${BASE_URL}/cards/likes/${id}`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t},\n\t})\n\t\t.then(checkResponse)\n}\n\nconst deleteCard = (token, id) => {\n\treturn fetch(`${BASE_URL}/cards/${id}`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t},\n\t})\n\t\t.then(checkResponse)\n}\n\n\nexport { register, authorize, getContent, getInitialCards, postCard, patchUserInfo, patchAvatar, putLike, removeLike, deleteCard };"]},"metadata":{},"sourceType":"module"}