{"ast":null,"code":"import _objectWithoutProperties from\"/home/dmitrij/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/home/dmitrij/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import plusButtonPath from\"../images/plus.svg\";import PopupWithForm from'./PopupWithForm';import api from'../utils/Api';import Card from'./Card';function Main(props){var _React$useState=React.useState('#'),_React$useState2=_slicedToArray(_React$useState,2),userName=_React$useState2[0],setUserName=_React$useState2[1];var _React$useState3=React.useState('#'),_React$useState4=_slicedToArray(_React$useState3,2),userDescription=_React$useState4[0],setUserDescription=_React$useState4[1];var _React$useState5=React.useState(),_React$useState6=_slicedToArray(_React$useState5,2),userAvatar=_React$useState6[0],setUserAvatar=_React$useState6[1];var _React$useState7=React.useState([]),_React$useState8=_slicedToArray(_React$useState7,2),cards=_React$useState8[0],getCards=_React$useState8[1];React.useEffect(function(){api.getUserInfo().then(function(data){setUserName(data.name);setUserDescription(data.about);setUserAvatar(data.avatar);});},[]);React.useEffect(function(){api.getInitialCards().then(function(data){console.log(data);var items=data.map(function(el){return{id:el._id,title:el.name,src:el.link,likes:el.likes.length};});console.log(items);getCards(items);});},[]);return/*#__PURE__*/React.createElement(\"main\",{className:\"content\"},/*#__PURE__*/React.createElement(\"section\",{className:\"profile\"},/*#__PURE__*/React.createElement(\"div\",{className:\"profile__infos\"},/*#__PURE__*/React.createElement(\"figure\",{className:\"profile__avatar-wrapper\",onClick:props.onEditAvatar},/*#__PURE__*/React.createElement(\"div\",{style:{backgroundImage:\"url(\".concat(userAvatar,\")\")},className:\"profile__avatar\",src:\"#\",alt:\"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u0430\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"profile__description\"},/*#__PURE__*/React.createElement(\"div\",{className:\"profile__info\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"profile__name\"},userName),/*#__PURE__*/React.createElement(\"button\",{className:\"profile__button profile__button_action_edit hover-button\",type:\"button\",onClick:props.onEditProfile})),/*#__PURE__*/React.createElement(\"p\",{className:\"profile__profession\"},userDescription))),/*#__PURE__*/React.createElement(\"button\",{className:\"profile__button profile__button_action_add hover-button\",type:\"button\",onClick:props.onAddPlace},/*#__PURE__*/React.createElement(\"img\",{src:plusButtonPath,alt:\"\\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"}))),/*#__PURE__*/React.createElement(\"section\",{className:\"photo-grid\"},cards.map(function(_ref){var id=_ref.id,card=_objectWithoutProperties(_ref,[\"id\"]);return/*#__PURE__*/React.createElement(Card,Object.assign({key:id},card,{onCardClick:props.onCardClick,card:card}));})),/*#__PURE__*/React.createElement(PopupWithForm,{title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",name:\"edit\",isOpen:props.isEditProfilePopupOpen,onClose:props.closeAllPopups},/*#__PURE__*/React.createElement(\"input\",{id:\"name-input\",type:\"text\",className:\"pop-up__input pop-up__text\",name:\"name\",required:true,minLength:\"2\",maxLength:\"40\",autoComplete:\"off\"}),/*#__PURE__*/React.createElement(\"span\",{id:\"name-input-error\",className:\"\"}),/*#__PURE__*/React.createElement(\"input\",{id:\"profession-input\",type:\"text\",className:\"pop-up__input pop-up__text \",name:\"about\",required:true,minLength:\"2\",maxLength:\"200\",autoComplete:\"off\"}),/*#__PURE__*/React.createElement(\"span\",{id:\"profession-input-error\",className:\"\"})),/*#__PURE__*/React.createElement(PopupWithForm,{title:\"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",name:\"new-card\",isOpen:props.isAddPlacePopupOpen,onClose:props.closeAllPopups},/*#__PURE__*/React.createElement(\"input\",{id:\"place\",type:\"text\",className:\"pop-up__text pop-up__text_type_place\",placeholder:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",name:\"name\",required:true,minLength:\"1\",maxLength:\"30\"}),/*#__PURE__*/React.createElement(\"span\",{id:\"place-error\",className:\"\"}),/*#__PURE__*/React.createElement(\"input\",{id:\"url\",type:\"url\",className:\"pop-up__text pop-up__text_type_link\",placeholder:\"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",name:\"link\",required:true}),/*#__PURE__*/React.createElement(\"span\",{id:\"url-error\",className:\"\"})),/*#__PURE__*/React.createElement(PopupWithForm,{title:\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",name:\"delete-card\"}),/*#__PURE__*/React.createElement(PopupWithForm,{title:\"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",name:\"edit-avatar\",isOpen:props.isEditAvatarPopupOpen,onClose:props.closeAllPopups},/*#__PURE__*/React.createElement(\"input\",{id:\"place\",type:\"url\",className:\"pop-up__text pop-up__text_type_place\",placeholder:\"\\u0441\\u0441\\u044B\\u043B\\u043A\\u0430\",name:\"avatar\",required:true}),/*#__PURE__*/React.createElement(\"span\",{id:\"place-error\",className:\"\"})));}export default Main;","map":{"version":3,"sources":["/home/dmitrij/dev/mesto-react/src/components/Main.js"],"names":["React","PopupWithForm","api","Card","Main","props","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","getCards","useEffect","getUserInfo","then","data","name","about","avatar","getInitialCards","console","log","items","map","el","id","_id","title","src","link","likes","length","onEditAvatar","backgroundImage","onEditProfile","onAddPlace","plusButtonPath","card","onCardClick","isEditProfilePopupOpen","closeAllPopups","isAddPlacePopupOpen","isEditAvatarPopupOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport plusButtonPath from '../images/plus.svg';\nimport PopupWithForm from './PopupWithForm'\nimport api from '../utils/Api'\nimport Card from './Card'\n\nfunction Main(props) {\n\n  const [userName, setUserName] = React.useState('#')\n  const [userDescription, setUserDescription] = React.useState('#')\n  const [userAvatar, setUserAvatar] = React.useState()\n  const [cards, getCards] = React.useState([])\n\n  React.useEffect(() => {\n    api.getUserInfo().then((data) => {\n      setUserName(data.name)\n      setUserDescription(data.about)\n      setUserAvatar(data.avatar)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    api.getInitialCards().then((data) => {\n      console.log(data)\n      const items = data.map((el) => ({\n        id: el._id,\n        title: el.name,\n        src: el.link,\n        likes: el.likes.length\n      }))\n      console.log(items)\n\n      getCards(items);\n    });\n  }, [])\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__infos\">\n          <figure className=\"profile__avatar-wrapper\" onClick={props.onEditAvatar}>\n            <div style={{ backgroundImage: `url(${userAvatar})` }} className=\"profile__avatar\" src=\"#\" alt=\"изображение аватара\">\n            </div>\n          </figure>\n          <div className=\"profile__description\">\n            <div className='profile__info'>\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button className=\"profile__button profile__button_action_edit hover-button\" type=\"button\" onClick={props.onEditProfile}></button>\n            </div>\n            <p className=\"profile__profession\">{userDescription}</p>\n          </div>\n        </div>\n        <button className=\"profile__button profile__button_action_add hover-button\" type=\"button\" onClick={props.onAddPlace}>\n          <img src={plusButtonPath} alt='изображение кнопки добавить' />\n        </button>\n      </section>\n      <section className=\"photo-grid\">\n        {cards.map(({ id, ...card }) => (\n          <Card key={id} {...card} onCardClick={props.onCardClick} card={card}/>\n        ))}\n      </section>\n      <PopupWithForm title='Редактировать профиль' name='edit' isOpen={props.isEditProfilePopupOpen} onClose={props.closeAllPopups}>\n        <input id='name-input' type=\"text\" className=\"pop-up__input pop-up__text\" name=\"name\" required\n          minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" />\n        <span id=\"name-input-error\" className=\"\"></span>\n        <input id='profession-input' type=\"text\" className=\"pop-up__input pop-up__text \" name=\"about\"\n          required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" />\n        <span id=\"profession-input-error\" className=\"\"></span>\n      </PopupWithForm>\n      <PopupWithForm title='Новое место' name='new-card' isOpen={props.isAddPlacePopupOpen} onClose={props.closeAllPopups}>\n        <input id='place' type=\"text\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"Название\"\n          name=\"name\" required minLength=\"1\" maxLength=\"30\" />\n        <span id=\"place-error\" className=\"\"></span>\n        <input id='url' type=\"url\" className=\"pop-up__text pop-up__text_type_link\" placeholder=\"Ссылка на картинку\"\n          name='link' required />\n        <span id=\"url-error\" className=\"\"></span>\n      </PopupWithForm>\n      <PopupWithForm title='Вы уверены?' name='delete-card'>\n      </PopupWithForm>\n\n      <PopupWithForm title='Обновить аватар' name='edit-avatar' isOpen={props.isEditAvatarPopupOpen} onClose={props.closeAllPopups}>\n        <input id='place' type=\"url\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"ссылка\"\n          name=\"avatar\" required />\n        <span id=\"place-error\" className=\"\"></span>\n      </PopupWithForm>\n    </main>\n  );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}