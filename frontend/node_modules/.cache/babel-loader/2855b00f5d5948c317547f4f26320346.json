{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error(`Ошибка: ${res.status}`)).then(result => {\n      return result;\n    });\n  } // getInitialCards() {\n  // \treturn fetch(`${this._baseUrl}/cards`, {\n  // \t\theaders: this._headers\n  // \t}).then(this._getResponseData)\n  // }\n  // getUserInfo() {\n  // \treturn fetch(`${this._baseUrl}/users/me`, {\n  // \t\theaders: this._headers\n  // \t})\n  // \t.then(this._getResponseData)\n  // }\n  // postCard(newCard) {\n  // \treturn fetch(`${this._baseUrl}/cards`, {\n  // \t\tmethod: 'POST',\n  // \t\theaders: this._headers,\n  // \t\tbody: JSON.stringify({\n  // \t\t\tname: newCard.name,\n  // \t\t\tlink: newCard.link\n  // \t\t})\n  // \t}).then(this._getResponseData)\n  // }\n\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  patchUserInfo(newData) {\n    return fetch(`${this._baseUrl}/users/me/`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newData.name,\n        about: newData.about\n      })\n    }).then(this._getResponseData);\n  }\n\n  patchAvatar(newData) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: newData.avatar\n      })\n    }).then(this._getResponseData);\n  }\n\n  putLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._getResponseData);\n  }\n\n  removeLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._getResponseData);\n  } // register(email, password) {\n  // \treturn fetch(`${this._baseUrl}/signup`, {\n  // \t\tmethod: 'POST',\n  // \t\theaders: {\n  // \t\t\t\"Content-Type\": \"application/json\"\n  // \t\t},\n  // \t\tbody: JSON.stringify({ \n  // \t\t\temail, password})\n  // \t})\n  // \t\t.then(this._getResponseData)\n  // }\n\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    authorization: 'bfb56561-5ac4-4046-893e-dcc4ab3eace0',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/home/dmitrij/dev/react-mesto-auth/src/utils/Api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_getResponseData","res","ok","json","Promise","reject","Error","status","then","result","deleteCard","id","fetch","method","patchUserInfo","newData","body","JSON","stringify","name","about","patchAvatar","avatar","putLike","removeLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n\tconstructor(options) {\n\t\tthis._baseUrl = options.baseUrl;\n\t\tthis._headers = options.headers;\n\t}\n\n\t_getResponseData(res) {\n\t\tif (res.ok) {\n\t\t\treturn res.json();\n\t\t}\n\t\treturn Promise.reject(new Error(`Ошибка: ${res.status}`))\n\t\t\t.then((result) => {\n\t\t\t\treturn result\n\t\t\t})\n\t}\n\n\t// getInitialCards() {\n\t// \treturn fetch(`${this._baseUrl}/cards`, {\n\t// \t\theaders: this._headers\n\t// \t}).then(this._getResponseData)\n\t// }\n\n\t// getUserInfo() {\n\t// \treturn fetch(`${this._baseUrl}/users/me`, {\n\t// \t\theaders: this._headers\n\t// \t})\n\t// \t.then(this._getResponseData)\n\t// }\n\n\t// postCard(newCard) {\n\t// \treturn fetch(`${this._baseUrl}/cards`, {\n\t// \t\tmethod: 'POST',\n\t// \t\theaders: this._headers,\n\t// \t\tbody: JSON.stringify({\n\t// \t\t\tname: newCard.name,\n\t// \t\t\tlink: newCard.link\n\t// \t\t})\n\t// \t}).then(this._getResponseData)\n\t// }\n\n\tdeleteCard(id) {\n\t\treturn fetch(`${this._baseUrl}/cards/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: this._headers\n\t\t}).then(this._getResponseData)\n\t}\n\n\tpatchUserInfo(newData) {\n\t\treturn fetch(`${this._baseUrl}/users/me/`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: this._headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: newData.name,\n\t\t\t\tabout: newData.about\n\t\t\t})\n\t\t}).then(this._getResponseData)\n\t}\n\n\tpatchAvatar(newData) {\n\t\treturn fetch(`${this._baseUrl}/users/me/avatar`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: this._headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tavatar: newData.avatar\n\t\t\t})\n\t\t}).then(this._getResponseData)\n\t}\n\n\tputLike(id) {\n\t\treturn fetch(`${this._baseUrl}/cards/likes/${id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: this._headers\n\t\t})\n\t\t\t.then(this._getResponseData)\n\t}\n\n\tremoveLike(id) {\n\t\treturn fetch(`${this._baseUrl}/cards/likes/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: this._headers\n\t\t})\n\t\t\t.then(this._getResponseData)\n\t}\n\n\t// register(email, password) {\n\t// \treturn fetch(`${this._baseUrl}/signup`, {\n\t// \t\tmethod: 'POST',\n\t// \t\theaders: {\n\t// \t\t\t\"Content-Type\": \"application/json\"\n\t// \t\t},\n\t// \t\tbody: JSON.stringify({ \n\t// \t\t\temail, password})\n\t// \t})\n\t// \t\t.then(this._getResponseData)\n\t// }\n}\n\nconst api = new Api({\n\tbaseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n\theaders: {\n\t\tauthorization: 'bfb56561-5ac4-4046-893e-dcc4ab3eace0',\n\t\t'Content-Type': 'application/json'\n\t}\n});\n\nexport default api\n"]},"metadata":{},"sourceType":"module"}