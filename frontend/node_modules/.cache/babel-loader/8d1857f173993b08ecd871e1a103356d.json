{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';var checkResponse=function checkResponse(res){return res.ok?res.json():Promise.reject(\"Error: \".concat(res.status));};var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(checkResponse);};var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(checkResponse);};var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(checkResponse);};export{register,authorize,getContent};","map":{"version":3,"sources":["/home/dmitrij/dev/mesto-react/src/auth.js"],"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","getContent","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,EAAJ,CAASD,GAAG,CAACE,IAAJ,EAAT,CAAsBC,OAAO,CAACC,MAAR,kBAAyBJ,GAAG,CAACK,MAA7B,EAA/B,EAAtB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACrC,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAClCY,MAAM,CAAE,MAD0B,CAElCC,OAAO,CAAE,CACR,eAAgB,kBADR,CAFyB,CAKlCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACpBN,QAAQ,CAARA,QADoB,CACVD,KAAK,CAALA,KADU,CAAf,CAL4B,CAAvB,CAAL,CAQLQ,IARK,CAQAhB,aARA,CAAP,CASA,CAVD,CAYA,GAAMiB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,KAAD,CAAQC,QAAR,CAAqB,CACtC,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAClCY,MAAM,CAAE,MAD0B,CAElCC,OAAO,CAAE,CACR,eAAgB,kBADR,CAFyB,CAKlCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEN,QAAQ,CAARA,QAAF,CAAYD,KAAK,CAALA,KAAZ,CAAf,CAL4B,CAAvB,CAAL,CAOLQ,IAPK,CAOAhB,aAPA,CAAP,CAQA,CATD,CAWA,GAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC7B,MAAOT,CAAAA,KAAK,WAAIX,QAAJ,cAAyB,CACpCY,MAAM,CAAE,KAD4B,CAEpCC,OAAO,CAAE,CACR,eAAgB,kBADR,CAER,iCAA2BO,KAA3B,CAFQ,CAF2B,CAAzB,CAAL,CAOLH,IAPK,CAOAhB,aAPA,CAAP,CAQA,CATD,CAWA,OAAQO,QAAR,CAAkBU,SAAlB,CAA6BC,UAA7B","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst checkResponse = (res) => res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n\nconst register = (email, password) => {\n\treturn fetch(`${BASE_URL}/signup`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify({ \n\t\t\tpassword, email})\n\t})\n\t\t.then(checkResponse)\n}\n\nconst authorize = (email, password) => {\n\treturn fetch(`${BASE_URL}/signin`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify({ password, email })\n\t})\n\t\t.then(checkResponse)\n}\n\nconst getContent = (token) => {\n\treturn fetch(`${BASE_URL}/users/me`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t}\n\t})\n\t\t.then(checkResponse)\n}\n\nexport {register, authorize, getContent};"]},"metadata":{},"sourceType":"module"}