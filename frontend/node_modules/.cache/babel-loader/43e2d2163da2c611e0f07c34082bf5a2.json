{"ast":null,"code":"var _jsxFileName = \"/home/dmitrij/dev/mesto-react/src/components/App.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isCardPopupOpen, setCardPopupOpen] = React.useState(false);\n  const [currentUser, setcurrentUser] = React.useState({});\n  const [cards, getCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      const items = data.map(el => ({\n        id: el._id,\n        title: el.name,\n        src: el.link,\n        likes: el.likes,\n        owner: el.owner\n      }));\n      getCards(items);\n    }).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    api.getUserInfo().then(data => {\n      setcurrentUser(data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleCardClick(card) {\n    setCardPopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setCardPopupOpen(false);\n  }\n\n  function handleCardDelete(id) {\n    api.deleteCard(id).then(() => {\n      getCards(cards.filter(card => card.id !== id));\n    });\n  }\n\n  function handleCardLike(id) {\n    //   const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.putLike(id).then(newCard => {//     const newCards = cards.map((card) => card.id === card._id ? newCard : c);\n      //     console.log(newCards)\n    }); //   console.log(cards)\n    // Обновляем стейт\n    // *используя методы массива создаем новый массив карточек newCards где карточка будет обновлена*\n    // getCards(cards);\n  }\n\n  function handleCardDislike(id) {\n    api.removeLike(id).then(newCard => {\n      console.log(newCard);\n      console.log(cards.likes);\n      const newCards = cards.map(card => card.id === card._id ? newCard : c); // getCards(newCards);\n    });\n  } //   function handleCardLike(card) {\n  //     const isLiked = card.likes.some(i => i._id === currentUser._id);\n  //     api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //         // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n  //       const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n  //       // Обновляем стейт\n  //       getCards(newCards);\n  //     });\n  // }\n\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    onEditAvatar: handleEditAvatarClick,\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onCardClick: handleCardClick,\n    onCardDelete: handleCardDelete,\n    onCardLike: handleCardLike,\n    onCardDislike: handleCardDislike,\n    cards: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    isOpen: isCardPopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"edit\",\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name-input\",\n    type: \"text\",\n    className: \"pop-up__input pop-up__text\",\n    name: \"name\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"40\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"name-input-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"profession-input\",\n    type: \"text\",\n    className: \"pop-up__input pop-up__text \",\n    name: \"about\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"200\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"profession-input-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    name: \"new-card\",\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"place\",\n    type: \"text\",\n    className: \"pop-up__text pop-up__text_type_place\",\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    name: \"name\",\n    required: true,\n    minLength: \"1\",\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"place-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"url\",\n    type: \"url\",\n    className: \"pop-up__text pop-up__text_type_link\",\n    placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n    name: \"link\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"url-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    name: \"delete-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    name: \"edit-avatar\",\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"place\",\n    type: \"url\",\n    className: \"pop-up__text pop-up__text_type_place\",\n    placeholder: \"\\u0441\\u0441\\u044B\\u043B\\u043A\\u0430\",\n    name: \"avatar\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"place-error\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dmitrij/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","PopupWithForm","CurrentUserContext","api","App","isEditProfilePopupOpen","setEditProfilePopupOpen","useState","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","isCardPopupOpen","setCardPopupOpen","currentUser","setcurrentUser","cards","getCards","useEffect","getInitialCards","then","data","items","map","el","id","_id","title","name","src","link","likes","owner","catch","err","console","log","getUserInfo","handleCardClick","card","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","closeAllPopups","handleCardDelete","deleteCard","filter","handleCardLike","putLike","newCard","handleCardDislike","removeLike","newCards","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport api from '../utils/Api'\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isCardPopupOpen, setCardPopupOpen] = React.useState(false)\n  const [currentUser, setcurrentUser] = React.useState({})\n  const [cards, getCards] = React.useState([])\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((data) => {\n        const items = data.map((el) => ({\n          id: el._id,\n          title: el.name,\n          src: el.link,\n          likes: el.likes,\n          owner: el.owner\n        }))\n\n        getCards(items);\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then((data) => {\n        setcurrentUser(data)\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  function handleCardClick(card) {\n    setCardPopupOpen(true)\n    setSelectedCard(card)\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setEditProfilePopupOpen(false)\n    setCardPopupOpen(false)\n  }\n\n  function handleCardDelete(id) {\n    api.deleteCard(id).then(() => {\n      getCards(cards.filter(card => card.id !== id))\n    });\n  }\n\n  function handleCardLike(id) {\n  //   const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.putLike(id).then((newCard) => {\n  //     const newCards = cards.map((card) => card.id === card._id ? newCard : c);\n  //     console.log(newCards)\n    })\n  //   console.log(cards)\n    // Обновляем стейт\n    // *используя методы массива создаем новый массив карточек newCards где карточка будет обновлена*\n    // getCards(cards);\n  }\n\n\n\n  function handleCardDislike(id) {\n    api.removeLike(id).then((newCard) => {\n      console.log(newCard)\n      console.log(cards.likes)\n      const newCards = cards.map((card) => card.id === card._id ? newCard : c);\n\n      // getCards(newCards);\n    });\n  }\n\n\n\n\n\n  //   function handleCardLike(card) {\n  //     const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  //     api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //         // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n  //       const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n  //       // Обновляем стейт\n  //       getCards(newCards);\n  //     });\n  // }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <div className=\"page__content\">\n          <Header />\n          <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            onCardDelete={handleCardDelete}\n            onCardLike={handleCardLike}\n            onCardDislike={handleCardDislike}\n\n            cards={cards}\n          />\n          <ImagePopup card={selectedCard} isOpen={isCardPopupOpen} onClose={closeAllPopups} />\n          <PopupWithForm title='Редактировать профиль' name='edit' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n            <input id='name-input' type=\"text\" className=\"pop-up__input pop-up__text\" name=\"name\" required\n              minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" />\n            <span id=\"name-input-error\" className=\"\"></span>\n            <input id='profession-input' type=\"text\" className=\"pop-up__input pop-up__text \" name=\"about\"\n              required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" />\n            <span id=\"profession-input-error\" className=\"\"></span>\n          </PopupWithForm>\n          <PopupWithForm title='Новое место' name='new-card' isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n            <input id='place' type=\"text\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"Название\"\n              name=\"name\" required minLength=\"1\" maxLength=\"30\" />\n            <span id=\"place-error\" className=\"\"></span>\n            <input id='url' type=\"url\" className=\"pop-up__text pop-up__text_type_link\" placeholder=\"Ссылка на картинку\"\n              name='link' required />\n            <span id=\"url-error\" className=\"\"></span>\n          </PopupWithForm>\n          <PopupWithForm title='Вы уверены?' name='delete-card'>\n          </PopupWithForm>\n          <PopupWithForm title='Обновить аватар' name='edit-avatar' isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n            <input id='place' type=\"url\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"ссылка\"\n              name=\"avatar\" required />\n            <span id=\"place-error\" className=\"\"></span>\n          </PopupWithForm>\n          <Footer />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}