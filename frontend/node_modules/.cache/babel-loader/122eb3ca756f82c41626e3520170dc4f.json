{"ast":null,"code":"var _jsxFileName = \"/home/dmitrij/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport Register from './Register';\nimport Login from './Login';\nimport { register, authorize, getContent, getInitialCards, postCard, patchUserInfo, patchAvatar, putLike, removeLike } from '../auth';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n  const [token, setToken] = useState('');\n  useEffect(_ => {\n    tokenCheck();\n  }, []);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isCardPopupOpen, setCardPopupOpen] = useState(false);\n  const [currentUser, setcurrentUser] = useState({});\n  const [cards, getCards] = useState([]);\n  const [infoTooltipState, setInfoTooltipState] = useState({\n    message: '',\n    success: Boolean,\n    open: false\n  });\n\n  const getCardsState = token => {\n    getInitialCards(token).then(data => {\n      const items = data.map(el => ({\n        _id: el._id,\n        name: el.name,\n        link: el.link,\n        likes: el.likes,\n        owner: el.owner\n      }));\n      getCards(items);\n    }).catch(err => console.log(err));\n  }; // useEffect(() => {\n  //   api.getInitialCards()\n  //     .then((data) => {\n  //       const items = data.map((el) => ({\n  //         _id: el._id,\n  //         name: el.name,\n  //         link: el.link,\n  //         likes: el.likes,\n  //         owner: el.owner\n  //       }))\n  //       getCards(items);\n  //     })\n  //     .catch(err => console.log(err))\n  // }, [])\n\n\n  function handleCardClick(card) {\n    setCardPopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setCardPopupOpen(false);\n    setInfoTooltipState({\n      open: false\n    });\n  }\n\n  function handleCardDelete(id) {\n    api.deleteCard(id).then(() => {\n      getCards(cards.filter(card => card._id !== id));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDislike(id) {\n    api.removeLike(id).then(newCard => {\n      const newCards = cards.map(c => c._id === id ? newCard : c);\n      getCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardLike(id) {\n    putLike(token, id).then(newCard => {\n      const newCards = cards.map(c => c._id === id ? newCard : c);\n      getCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser(newData) {\n    patchUserInfo(token, newData).then(data => {\n      console.log(data);\n      setcurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    patchAvatar(token, newAvatar).then(data => {\n      console.log(data);\n      setcurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    postCard(token, newCard).then(data => {\n      console.log(data);\n      getCards([...cards, data]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  const handleLogin = (email, password) => {\n    authorize(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        tokenCheck();\n      }\n    }).catch(err => console.error(err));\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setcurrentUser({});\n    setLoggedIn(false);\n    setToken(null);\n  };\n\n  const handleRegister = (email, password) => {\n    register(email, password).then(data => {\n      console.log(data);\n\n      if (data.data._id) {\n        setInfoTooltipState({\n          message: 'Вы успешно зарегистрировались!',\n          success: true,\n          open: true\n        });\n        history.push('/sign-in');\n      }\n    }).catch(err => {\n      console.log(err);\n      setInfoTooltipState({\n        message: 'Что-то пошло не так! Попробуйте ещё раз.',\n        success: false,\n        open: true\n      });\n    });\n  };\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      setToken(jwt);\n      getContent(jwt).then(res => {\n        console.log(res);\n\n        if (res.data.email) {\n          setcurrentUser(res.data);\n          setLoggedIn(true);\n          history.push('/');\n          getCardsState(jwt);\n        }\n      }).catch(err => {\n        localStorage.removeItem('jwt');\n        console.error(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    loggedIn: loggedIn,\n    logout: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    handleRegister: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/\",\n    loggedIn: loggedIn,\n    component: Main,\n    onEditAvatar: handleEditAvatarClick,\n    onEditProfile: handleEditProfileClick,\n    onAddPlace: handleAddPlaceClick,\n    onCardClick: handleCardClick,\n    onCardDelete: handleCardDelete,\n    onCardLike: handleCardLike,\n    onCardDislike: handleCardDislike,\n    cards: cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: selectedCard,\n    isOpen: isCardPopupOpen,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoTooltip, {\n    onClose: closeAllPopups,\n    renderState: infoTooltipState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(App, \"Ev89sKfIF7gz+piN5//zIbaIaZ0=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dmitrij/dev/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Route","Switch","useHistory","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","api","Register","Login","register","authorize","getContent","getInitialCards","postCard","patchUserInfo","patchAvatar","putLike","removeLike","ProtectedRoute","InfoTooltip","App","loggedIn","setLoggedIn","history","token","setToken","_","tokenCheck","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","isCardPopupOpen","setCardPopupOpen","currentUser","setcurrentUser","cards","getCards","infoTooltipState","setInfoTooltipState","message","success","Boolean","open","getCardsState","then","data","items","map","el","_id","name","link","likes","owner","catch","err","console","log","handleCardClick","card","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","closeAllPopups","handleCardDelete","id","deleteCard","filter","handleCardDislike","newCard","newCards","c","handleCardLike","handleUpdateUser","newData","handleUpdateAvatar","newAvatar","handleAddPlaceSubmit","handleLogin","email","password","localStorage","setItem","error","handleLogout","removeItem","handleRegister","push","jwt","getItem","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport api from '../utils/Api'\nimport Register from './Register';\nimport Login from './Login';\nimport { register, authorize, getContent, getInitialCards, postCard, patchUserInfo, patchAvatar, putLike, removeLike } from '../auth';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\n\nfunction App() {\n\n  const [loggedIn, setLoggedIn] = useState(false)\n  const history = useHistory();\n  const [token, setToken] = useState('')\n\n  useEffect(_ => {\n    tokenCheck()\n  }, [])\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false)\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isCardPopupOpen, setCardPopupOpen] = useState(false)\n  const [currentUser, setcurrentUser] = useState({})\n  const [cards, getCards] = useState([])\n  const [infoTooltipState, setInfoTooltipState] = useState({\n    message: '',\n    success: Boolean,\n    open: false\n  });\n\n\n  const getCardsState = (token) => {\n    getInitialCards(token)\n      .then((data) => {\n        const items = data.map((el) => ({\n          _id: el._id,\n          name: el.name,\n          link: el.link,\n          likes: el.likes,\n          owner: el.owner\n        }))\n        getCards(items);\n      })\n      .catch(err => console.log(err))\n  }\n\n  // useEffect(() => {\n  //   api.getInitialCards()\n  //     .then((data) => {\n  //       const items = data.map((el) => ({\n  //         _id: el._id,\n  //         name: el.name,\n  //         link: el.link,\n  //         likes: el.likes,\n  //         owner: el.owner\n  //       }))\n  //       getCards(items);\n  //     })\n  //     .catch(err => console.log(err))\n  // }, [])\n\n  function handleCardClick(card) {\n    setCardPopupOpen(true)\n    setSelectedCard(card)\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setEditProfilePopupOpen(false)\n    setCardPopupOpen(false)\n    setInfoTooltipState({\n      open: false\n    })\n  }\n\n  function handleCardDelete(id) {\n    api.deleteCard(id)\n      .then(() => {\n        getCards(cards.filter(card => card._id !== id))\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleCardDislike(id) {\n    api.removeLike(id)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === id ? newCard : c);\n        getCards(newCards);\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleCardLike(id) {\n    putLike(token, id)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === id ? newCard : c);\n        getCards(newCards);\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleUpdateUser(newData) {\n    patchUserInfo(token, newData)\n      .then((data) => {\n        console.log(data)\n        setcurrentUser(data)\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    patchAvatar(token, newAvatar)\n      .then((data) => {\n        console.log(data)\n        setcurrentUser(data)\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    postCard(token, newCard)\n      .then((data) => {\n        console.log(data)\n        getCards([...cards, data]);\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleLogin = (email, password) => {\n    authorize(email, password)\n      .then(data => {\n        if (data.token) {\n          localStorage.setItem('jwt', data.token)\n          tokenCheck()\n        }\n      })\n      .catch(err => console.error(err))\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    setcurrentUser({})\n    setLoggedIn(false)\n    setToken(null)\n  }\n\n  const handleRegister = (email, password) => {\n    register(email, password)\n      .then(data => {\n        console.log(data)\n        if (data.data._id) {\n          setInfoTooltipState({\n            message: 'Вы успешно зарегистрировались!',\n            success: true,\n            open: true\n          })\n          history.push('/sign-in')\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        setInfoTooltipState({\n          message: 'Что-то пошло не так! Попробуйте ещё раз.',\n          success: false,\n          open: true\n        })\n      })\n  }\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      setToken(jwt)\n      getContent(jwt)\n        .then((res) => {\n          console.log(res)\n          if (res.data.email) {\n            setcurrentUser(res.data)\n            setLoggedIn(true)\n            history.push('/')\n            getCardsState(jwt)\n          }\n        }).catch(err => {\n          localStorage.removeItem('jwt')\n          console.error(err)\n        })\n    }\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <div className=\"page__content\">\n          <Header\n            loggedIn={loggedIn}\n\n            logout={handleLogout}\n          />\n          <Switch>\n            <Route exact path=\"/sign-in\">\n              <Login handleLogin={handleLogin} />\n            </Route>\n            <Route exact path=\"/sign-up\">\n              <Register handleRegister={handleRegister} />\n            </Route>\n            <ProtectedRoute exact path=\"/\"\n              loggedIn={loggedIn}\n              component={Main}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardDelete={handleCardDelete}\n              onCardLike={handleCardLike}\n              onCardDislike={handleCardDislike}\n              cards={cards}\n            />\n          </Switch>\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n          <ImagePopup\n            card={selectedCard}\n            isOpen={isCardPopupOpen}\n            onClose={closeAllPopups}\n          />\n          <InfoTooltip\n            onClose={closeAllPopups}\n            renderState={infoTooltipState}\n          />\n          <Footer />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}